"use strict";(self.webpackChunkbaked_docs=self.webpackChunkbaked_docs||[]).push([[5548],{6015:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=n(4848),i=n(8453);const o={title:"Suite Studios \u2014 A SaaS Future for Baked Studios",authors:["cameron"],tags:["suite","file-transfer"]},r=void 0,l={permalink:"/blog/2024/03/15/2024-03-15-suite-saas-future/suite-saas-future",source:"@site/blog/2024-03-15-suite-saas-future/2024-03-15-suite-saas-future.mdx",title:"Suite Studios \u2014 A SaaS Future for Baked Studios",description:"This is an overview of how our pipeline could be improved by adopting Suite Studios cloud storage software.",date:"2024-03-15T00:00:00.000Z",tags:[{label:"suite",permalink:"/blog/tags/suite"},{label:"file-transfer",permalink:"/blog/tags/file-transfer"}],readingTime:15.215,hasTruncateMarker:!0,authors:[{name:"Cameron Target",title:"Pipeline Manager",url:"https://www.wearebaked.com/about",imageURL:"https://avatars.githubusercontent.com/u/127965975?s=400&u=9799eb0c2c2b7bcf45f47bb170c8a154fd4e7eb4&v=4",key:"cameron"}],frontMatter:{title:"Suite Studios \u2014 A SaaS Future for Baked Studios",authors:["cameron"],tags:["suite","file-transfer"]},unlisted:!1,prevItem:{title:"Update to render_template.nk",permalink:"/blog/2024/04/08/2024-04-08-new-render-template/new-render-template"},nextItem:{title:"USDZ Cookie!",permalink:"/blog/2024/02/25/2024-02-25-usdz/usdz"}},a={authorsImageUrls:[void 0]},d=[{value:"<strong>Introduction</strong>",id:"introduction",level:2},{value:"\u26a0\ufe0f<strong>The Problem</strong>",id:"\ufe0fthe-problem",level:2},{value:"<strong>Solution 1</strong>",id:"solution-1",level:3},{value:"<strong>Solution 2</strong>",id:"solution-2",level:3},{value:"<strong>Solution 3</strong>",id:"solution-3",level:3},{value:"<strong>Solution 4</strong>",id:"solution-4",level:3},{value:"<strong>Solution 5</strong>",id:"solution-5",level:3},{value:"<strong>Solution 6</strong>",id:"solution-6",level:3},{value:"<strong>\u26a0\ufe0fThe Other Problem</strong>",id:"\ufe0fthe-other-problem",level:2},{value:"<strong>Response</strong>",id:"response",level:3},{value:"<strong>\u26a0\ufe0fThe Other, Other Problem</strong>",id:"\ufe0fthe-other-other-problem",level:2},{value:"<strong>Response</strong>",id:"response-1",level:3},{value:"<strong>Final Thoughts</strong>",id:"final-thoughts",level:2},{value:"<strong>Before</strong>",id:"before",level:3},{value:"<strong>After</strong>",id:"after",level:3}];function c(e){const t={admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",input:"input",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"This is an overview of how our pipeline could be improved by adopting Suite Studios cloud storage software."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"introduction",children:(0,s.jsx)(t.strong,{children:"Introduction"})}),"\n",(0,s.jsx)(t.p,{children:"At the core of every VFX pipeline is thoughtful consideration of the end user experience. At Baked, our users are artists, coordinators, supervisors and producers. A good pipeline needs the following qualities... "}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Consistency \u2014 repeatable workflows and continuity in relation to application UX design, production management software integrations, render processes and workstation disk images."}),"\n",(0,s.jsx)(t.li,{children:"Security \u2014 follows best practices to the best of our knowledge - in this case, ideally MPA TPN assessed."}),"\n",(0,s.jsx)(t.li,{children:"Efficiency \u2014 there\u2019s no place for extensive manual copying and sorting. No one should have to sift through the filesystem."}),"\n",(0,s.jsx)(t.li,{children:"Performance \u2014 speedy, snappy, however you want to put it, the pipeline should have low latency and should present users with the broadest range of tools and resources available."}),"\n",(0,s.jsx)(t.li,{children:"Reliability \u2014 the pipeline cannot be glitchy, buggy or impede the working process in anyway."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Let\u2019s start with the workstation. Ideally workstations have a shared image that gets copied from one environment to the next to provide a simple, consistent working experience for users."}),"\n",(0,s.jsx)("img",{src:n(92).A,className:"invert-color",alt:"Workstations",style:{width:"40%",height:"auto"}}),"\n",(0,s.jsx)(t.p,{children:"Now we need a pipeline. Baked has gone with ShotGrid\u2019s Pipeline Toolkit as the foundation for our pipeline. The user-friendly integrations with our primary production management software, as well as support for most digital content creation software, make this toolkit a huge help and an essential starting point. Using the toolkit, Baked and our partners can build things like ingest tools, export tools, environment specific tools, plugin managers and plenty other creative integrations that further our ability to meet the standards set for a good pipeline."}),"\n",(0,s.jsx)("img",{src:n(9529).A,className:"invert-color",alt:"SGTK",style:{width:"50%",height:"auto"}}),"\n",(0,s.jsxs)(t.p,{children:["One of the basic requirements of ShotGrid\u2019s Pipeline Toolkit is a storage location to work off of. The toolkit looks for a specified file path to read and write files based on the operating system, e.g Windows: ",(0,s.jsx)(t.code,{children:"P:\\YOUR_DRIVE"}),", MAC: ",(0,s.jsx)(t.code,{children:"/Volumes/YOUR_DRIVE"}),". These storage locations can be set on a per-project basis, but it\u2019s beneficial to keep things consistent by choosing one location to point to \u2014 enter BASKET."]}),"\n",(0,s.jsx)("img",{src:n(3956).A,className:"invert-color",alt:"Basket",style:{width:"25%",height:"auto"}}),"\n",(0,s.jsx)(t.p,{children:"BASKET is a shared network access storage and media management server on-premise in Baked\u2019s office in Los Angeles. It\u2019s an EVO model made by Studio Network Solutions. It does what it needs to do as a centralized location to read and write media files coming from workstations running digital content creation software."}),"\n",(0,s.jsx)("img",{src:n(3320).A,className:"invert-color",alt:"Cycle",style:{width:"75%",height:"auto"}}),"\n",(0,s.jsxs)(t.h2,{id:"\ufe0fthe-problem",children:["\u26a0\ufe0f",(0,s.jsx)(t.strong,{children:"The Problem"})]}),"\n",(0,s.jsx)(t.p,{children:"Baked is a multi-location company with employees spread out across the country. BASKET is in Los Angles, not in the cloud, not in our offices in New York or Montana, not in our client\u2019s offices either (but we\u2019ll come back to that later). If I\u2019m working in New York, I can\u2019t specify BASKET as the toolkit storage location because I\u2019m not connected to BASKET there."}),"\n",(0,s.jsx)(t.h3,{id:"solution-1",children:(0,s.jsx)(t.strong,{children:"Solution 1"})}),"\n",(0,s.jsx)(t.p,{children:"Remote Desktop \u2014 the first step in addressing the problem of getting people connected to BASKET from afar, is to move people closer to BASKET \u2014 duh! Remoting in using an application like Jump Desktop lets someone in New York, Montana or elsewhere connect to a workstation on-premise in Los Angeles that is a part of the network that includes BASKET."}),"\n",(0,s.jsx)("img",{src:n(3586).A,className:"invert-color",alt:"Remote"}),"\n",(0,s.jsx)(t.p,{children:"A quick comparison of Remote Desktop solutions:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Jump Desktop"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"NICE DCV"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Parsec"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Integration with AWS"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Price"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"16/user/month"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"13/desktop/month"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"30/user/month"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Good Performance"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Linux Support"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Sort of"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"In Progress"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"This is a fast, efficient, and secure way of working. But what happens when we run out of workstations in Los Angeles? Or we have good reasons to want to work locally but in another location? Suppose we scale up somehow \u2014 whether another location, another server or adding something in the cloud\u2026 in doing so, how do we adhere to ShotGrid\u2019s storage location requirement?"}),"\n",(0,s.jsx)(t.h3,{id:"solution-2",children:(0,s.jsx)(t.strong,{children:"Solution 2"})}),"\n",(0,s.jsxs)(t.p,{children:["Symlinks \u2014 Symlinks let us trick ShotGrid by replicating the specified storage location file path while actually pointing to another location on a local machine. So for example, while the shared storage available in New York might be ",(0,s.jsx)(t.code,{children:"/Volumes/SNS/"}),", a symlink lets us make that storage also accessible locally from ",(0,s.jsx)(t.code,{children:"/Volumes/BASKET/"}),". Great! But with multiple symlinks, and essentially multiple BASKETS around the country, we need to sync them so that assets saved to one \u201cBASKET\u201d can be accessed by ShotGrid toolkit from other locations."]}),"\n",(0,s.jsx)("img",{src:n(1383).A,className:"invert-color",alt:"Symlink",style:{width:"75%",height:"auto"}}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"The absolute UNC file path of the storage stays the same, but as far as ShotGrid is concerned, there\u2019s another \u201cBASKET\u201d in that location."})}),"\n",(0,s.jsx)(t.h3,{id:"solution-3",children:(0,s.jsx)(t.strong,{children:"Solution 3"})}),"\n",(0,s.jsx)(t.p,{children:"Sync Solutions \u2014 Resilio, Syncthing, and Signiant Jet are all sync solutions that scan for changes in one location and transfer files back and forth to keep multiple servers in sync. This part is pretty straightforward but there are a few things we need to consider: speed, reliability and sync-ability with the cloud. Let\u2019s look at Syncthing, it\u2019s supposed to be fast, it has transfer rules that make it quite reliable, but it doesn\u2019t sync with object storage in the cloud. However it is open source and free, so that\u2019s a great plus. Each sync solution comes with its pros and cons. For now let\u2019s use Syncthing, but we need a cloud workflow for when things get busy and we don\u2019t have enough hardware to support the resource demands \u2014 is there another way to \u2018sync\u2019 these servers?"}),"\n",(0,s.jsx)("img",{src:n(7555).A,className:"invert-color",alt:"Sync Overview",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"I\u2019ve added the FARM and AWS Thinkbox parts of our workflow in the above diagrams. These are important aspects of our workflow that we\u2019ll talk about in a moment."})}),"\n",(0,s.jsx)(t.p,{children:"Here\u2019s a brief comparison of different sync solutions:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"right"}}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Speed"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Price"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Cloud Compatible"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"As Fast as File System"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Syncthing"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"SLOW"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Free"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Signiant Jet"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"FAST"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Expensive"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"Resilio"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"FAST"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Mid Range"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"solution-4",children:(0,s.jsx)(t.strong,{children:"Solution 4"})}),"\n",(0,s.jsx)(t.p,{children:"Locally Accessible and Mountable Cloud Storage - maybe making a server the place you direct ShotGrid to in the first place is a mistake. Instead, one option to consider is a locally mounted cloud bucket. This cloud bucket would be the single source of truth that caches to local storage in these different geographic and cloud places. That\u2019s what Lucidlink and Suite do. Let\u2019s look at another diagram."}),"\n",(0,s.jsx)("img",{src:n(4746).A,className:"invert-color",alt:"Suite Overview",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Notice how the other two BSKTs are now called just by the make and model of the machine, we don\u2019t need symlinks anymore."})}),"\n",(0,s.jsxs)(t.p,{children:["In this diagram, you can see Suite plays a pretty heavy role. It\u2019s sitting in the middle because in this scenario, ShotGrid is directed to ",(0,s.jsx)(t.code,{children:"Y:\\Suite"})," or ",(0,s.jsx)(t.code,{children:"/Volumes/Suite/"})," as its primary storage location. The storage servers themselves: SNS, SNS and SYN are now for cacheing and slow storage. No more symlinks, or syncing needed. Suite also integrates with the cloud so that workflow is shown above as well."]}),"\n",(0,s.jsx)(t.p,{children:"Here\u2019s a brief comparison of Suite and Lucidlink \u2014 just the dealbreakers:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Suite"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Lucidlink"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Price"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"75/TB + 10/user"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"80/TB + 10/user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Responsive Team"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Easy install"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Proven Track Record"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Faster Speed"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Transactional Writes"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"And here\u2019s a brief comparison of Suite to a sync solution like Resilio:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Suite"}),(0,s.jsx)(t.th,{children:"Resilio"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Technology"}),(0,s.jsx)(t.td,{children:"FUSE, s3fs, proprietary acceleration"}),(0,s.jsx)(t.td,{children:"Bit Torrent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Method"}),(0,s.jsx)(t.td,{children:"Cloud"}),(0,s.jsx)(t.td,{children:"P2P"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Streaming/cacheing"}),(0,s.jsx)(t.td,{children:"Download/upload"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Metadata"}),(0,s.jsx)(t.td,{children:"Independent"}),(0,s.jsx)(t.td,{children:"Bunched"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Type"}),(0,s.jsx)(t.td,{children:"File system"}),(0,s.jsx)(t.td,{children:"Application"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Speed"}),(0,s.jsx)(t.td,{children:"Instant, then stream"}),(0,s.jsx)(t.td,{children:"Wait, then work"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Price"}),(0,s.jsx)(t.td,{children:"e.g 13k/year"}),(0,s.jsx)(t.td,{children:"7k/year"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Capacity"}),(0,s.jsx)(t.td,{children:"e.g 15TB on Cloud"}),(0,s.jsx)(t.td,{children:"500TB of monitored storage"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Max throughput"}),(0,s.jsx)(t.td,{children:"10-24gbps (1gbps with our WiFi)"}),(0,s.jsx)(t.td,{children:"2gbps (1gbps with our WiFi)"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"This cloud to local cacheing workflow can be powerful but there are some things we need to figure out."}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Most of the time, our core storage option is going to be barraged with read and write requests for large image sequences. If Suite is cloud storage, we need to make sure things get rendered locally first and then make their way to the cloud. It would be frustrating if render speeds were capped at our upload speeds."}),"\n",(0,s.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","Suite does indeed cache locally on render and so would not need to be slowed down to match upload speeds."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Going off of that, we have a render farm. How do we configure Suite to be a target location for renders coming off the farm? Do we have to install Suite on every render node? Is that possible?"}),"\n",(0,s.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","Suite can be configured to work with a render farm without needing to be installed on each individual node."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Continuing off of that, does Suite work with cloud rendering?"}),"\n",(0,s.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:[(0,s.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","The same workflow for on-premise render farms can be applied to cloud-based render farms."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("img",{src:n(5191).A,className:"invert-color",alt:"Suite Farm",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsx)(t.p,{children:"There\u2019s a way to connect the dots here, and Suite solves what could have been a huge problem: internet speeds dictating render times and capacity rather than LAN ethernet cables. The cacheing goes both ways, down from and up to the cloud."}),"\n",(0,s.jsx)(t.p,{children:"If there wasn\u2019t a way to do this, we\u2019d need another approach that allowed our NAS and LAN ecosystems to function properly, but also sync to other servers as well as cloud object storage. Signiant Jet and Resilio would come back to the table."}),"\n",(0,s.jsx)(t.p,{children:"O.K cool, so we\u2019ve solved a lot of issues by using Suite. What else needs to happen to build infrastructure for a solid pipeline?"}),"\n",(0,s.jsx)(t.h3,{id:"solution-5",children:(0,s.jsx)(t.strong,{children:"Solution 5"})}),"\n",(0,s.jsx)(t.p,{children:"File Transfer \u2014 I said earlier that we\u2019d come back to the fact that BASKET isn\u2019t in our client offices. That\u2019s true, and this is where we need a file transfer solution to bring our data to our clients and theirs to us. Preferably a solution that uses a branded UI in the browser and a password protected link. Enter MASV, Media Shuttle, and Suite Connect."}),"\n",(0,s.jsx)(t.p,{children:"Here\u2019s a brief comparison of MASV, Suite Connect, and Signiant Media Shuttle."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Suite Connect"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"MASV"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Media Shuttle"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Currently Available"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Customizable UI"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"API"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Unknown"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"REST API"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Unknown"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Price"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Free w/ Suite"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"6k / year"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"11k / year"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Growing Files"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Unknown"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"On-prem Utilization"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Send as Link"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Client Portal"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"It seems like we\u2019ll be going with MASV for now for file transfers \u2014 Suite\u2019s connect project is still in beta, but once it\u2019s available I see no reason not to switch considering it\u2019ll be free with our plan."}),"\n",(0,s.jsx)("img",{src:n(2518).A,className:"invert-color",alt:"File Transfer",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsx)(t.p,{children:"Let\u2019s look at some benefits of MASV while we\u2019re on the subject. MASV downloads from the cloud, so while there\u2019s an upload process on our end that might take a moment, from the client\u2019s perspective, things download extremely quickly. I\u2019m going to note here that Suite Connect will be the same."}),"\n",(0,s.jsx)(t.p,{children:"MASV has a great downloadable app that speeds up file transfers and allows for hot folders and automations. This app is a Media Shuttle killer in my opinion. MASV also has support for \u201cgrowing folders\u201d which basically means it uploads and sends files that are part of a larger render or stream that\u2019s still in progress. Think sending EXRs to another location while they\u2019re still rendering. We\u2019ll have to look more closely into use-cases but it\u2019s a powerful feature. I\u2019ll note again, that Suite has both features as well; a nice app and a way to stream/upload still-rendering files."}),"\n",(0,s.jsx)(t.p,{children:"MASV is a transfer solution that uploads your media to the cloud and makes it available for download elsewhere. Suite is exactly the same, but comes with a mountable storage solution we can work off of. MASV will work for us while Suite Connect is still in development, but long term, it\u2019s not really apples to apples."}),"\n",(0,s.jsx)(t.h3,{id:"solution-6",children:(0,s.jsx)(t.strong,{children:"Solution 6"})}),"\n",(0,s.jsx)(t.p,{children:"Mountable Storage for Supervisors and Producers \u2014 Aside from replacing a sync solution with cloud integration, and a file transfer solution, Suite has another important place in this pipeline. On the Supervisor and Producer side of things, Suite provides access to hi-res movie and EXR versions of shots that can be easily opened and reviewed via the ShotGrid interface. Anything in the pipeline will be viewable and editable remotely by coordinators, producers and supervisors."}),"\n",(0,s.jsx)("img",{src:n(6702).A,className:"invert-color",alt:"Supervisor Workflow",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Addition of Remote Supervisors/Producers workflow."})}),"\n",(0,s.jsx)("img",{src:n(7775).A,alt:"Play In RV",style:{width:"75%",height:"auto"}}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Media is directly loadable from the \u201cpath to frames\u201d and \u201cpath to movie\u201d fields that direct RV to EXRs and hi-res MOVs respectively. A user could do this on a train for example."})}),"\n",(0,s.jsx)("img",{src:n(9774).A,alt:"RV Playback",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"An example of RV playing back EXRs"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"\ufe0fthe-other-problem",children:(0,s.jsx)(t.strong,{children:"\u26a0\ufe0fThe Other Problem"})}),"\n",(0,s.jsx)(t.p,{children:"Double Paying for On-Premise and Cloud Storage \u2014 one of the issues with this set-up is that we have all this on-premise storage, why go after cloud storage too? Is there any reason to have both? Why bother if Syncthing is available?"}),"\n",(0,s.jsx)(t.h3,{id:"response",children:(0,s.jsx)(t.strong,{children:"Response"})}),"\n",(0,s.jsx)(t.p,{children:"We\u2019ll be paying the same for Suite with Suite Connect as we would for Syncthing and Media Shuttle. The only deal breaker in this whole thing is we can\u2019t afford anything other than Syncthing and MASV, in which case, fine that makes sense. Let\u2019s just align on the goal for when we have a more optimal cash flow situation."}),"\n",(0,s.jsx)(t.p,{children:"Reasons why Suite is a better option than Syncthing & MASV or Syncthing & Media Shuttle:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"One program, one single source of truth."}),"\n",(0,s.jsx)(t.li,{children:"One support team"}),"\n",(0,s.jsx)(t.li,{children:"Price is comparable when counted together with Suite Connect (MS + Syncthing vs Suite/ MASV + Syncthing vs Suite)"}),"\n",(0,s.jsx)(t.li,{children:"We can understand it and won\u2019t need to consistent configuration and management by IT."}),"\n",(0,s.jsx)(t.li,{children:"Reduced reliance on On-Prem - this is good incase of power outages, malfunctions etc"}),"\n",(0,s.jsx)(t.li,{children:"Access from anywhere with a login."}),"\n",(0,s.jsx)(t.li,{children:"Encryption, transactional writes and redundancy."}),"\n",(0,s.jsx)(t.li,{children:"Ease of use - it\u2019s super snappy."}),"\n",(0,s.jsx)(t.li,{children:"Familiarity - it\u2019s just a mounted drive, we won\u2019t know the difference - it\u2019ll be just like basket but in the cloud too."}),"\n",(0,s.jsx)(t.li,{children:"Without Suite, Coordinators, Producers and Supervisors will have to continue to dive into the file system and retrieve stuff by remoting in. This doesn\u2019t align with the criteria set up at the beginning of this document for what a good pipeline should be."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"\ufe0fthe-other-other-problem",children:(0,s.jsx)(t.strong,{children:"\u26a0\ufe0fThe Other, Other Problem"})}),"\n",(0,s.jsx)(t.p,{children:"Too Much Media to Store on Cloud, will be Too Expensive \u2014 TRG was 30TB how on earth will we afford cloud storage for projects that size?"}),"\n",(0,s.jsx)(t.h3,{id:"response-1",children:(0,s.jsx)(t.strong,{children:"Response"})}),"\n",(0,s.jsx)(t.p,{children:"TRG was 10TB in terms of what we\u2019d actually host on cloud, and that\u2019s without DWAB compression, but let\u2019s start there, with a 10TB per big project approach. If we have two Trigger Warnings going at the same time, we\u2019ll have other problems to worry about besides the cost of cloud storage. But let\u2019s say we\u2019re still worried about a 25 TB storage solution on the cloud. That will be about 22k without a discount from Suite. The point of cloud is that it\u2019s extremely flexible. We can scale up (on a month to month basis) from our 1 year commitment of 15TB to 25TB for the work, in which case we\u2019re working with a variable cost i.e money comes in goes up, money going out goes up. And then we can scale back down to 15TB \u2014 Money coming in goes down, money going out goes down. Currently we\u2019re operating on a fixed cost assumption \u2014 money coming in goes up, no change to money going out for infrastructure, money coming in goes down, still no change to money going out for infrastructure. Furthermore, if we have two TRGs happening simultaneously, we do not have the infrastructure on-prem to maintain that from a workstation standpoint. In order to have remote workstations on the cloud, we\u2019ll need that shared object storage. Working with Suite in that scenario is ideal. Shotgrid configs would not have to change. Syncthing cannot sync with object storage."}),"\n",(0,s.jsx)(t.h2,{id:"final-thoughts",children:(0,s.jsx)(t.strong,{children:"Final Thoughts"})}),"\n",(0,s.jsx)(t.p,{children:"Suite and MASV are both excellent pieces of software. They\u2019re fast, reliable and can handle demanding image sequence based workflow. Between Suite Storage, MASV for now, and Suite Connect after development, we\u2019re going to have a lot of our bases covered. Our goals for this pipeline are consistency, security, efficiency, performance and reliability. Adopting a hybrid solution ensures performance and reliability on the on-premise side, while also enabling consistency through powerful syncing and shared file systems, as well as security with Suite\u2019s permissions functions. This approach ticks all the boxes, and the sooner we upgrade to this cloud native files system based, Shotgrid toolkit based, hybrid based Pipeline, the better off we\u2019ll be. Here\u2019s a before and after of our pipeline with these additions."}),"\n",(0,s.jsx)(t.h3,{id:"before",children:(0,s.jsx)(t.strong,{children:"Before"})}),"\n",(0,s.jsx)("img",{src:n(6617).A,className:"invert-color",alt:"Before",style:{width:"100%",height:"auto"}}),"\n",(0,s.jsx)(t.h3,{id:"after",children:(0,s.jsx)(t.strong,{children:"After"})}),"\n",(0,s.jsx)("img",{src:n(1240).A,className:"invert-color",alt:"After",style:{width:"100%",height:"auto"}})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1240:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/after-51e10fd013ece4c3111735ea15256f53.png"},6617:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/before-2277016d8ba85ec2a60b13e5dffda223.png"},3956:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/bskt-a8c18a95cfe5854990fae8fef043b440.png"},3320:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/cycle-351bb067968bd7c4851f3dacda6ea003.png"},2518:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/file_transfer-718b976a2c47ab6ff89fe70d97c9c753.png"},7775:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/play_in_rv-5f51adec491412525e1b14f2c9e3af37.png"},3586:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/remote-e13f4487b767736db2d89b38db3397aa.png"},9774:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/rv_playback-6cd55df981ff9170b91b886630b3a357.png"},9529:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/sgtk-c6da971e6c051a671f63f0b7ece5fc67.png"},5191:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/suite_farm-9052b26ca90b428d87156ea31e495d06.png"},4746:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/suite_overview-1b313e9ee14c4ad8e51f8248ba922171.png"},6702:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/supervisor-58adf8e39dbcc72e011ba893f035b0e8.png"},1383:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/symlink-b19f19824397df1f9b9071e54e43c0a9.png"},7555:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/sync_overview-783c503aba4bd1eae63383e8d40c5872.png"},92:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/workstations-3046b896def3b3f3db480e69344615f8.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);