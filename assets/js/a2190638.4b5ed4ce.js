"use strict";(self.webpackChunkbaked_docs=self.webpackChunkbaked_docs||[]).push([[3947],{2704:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(4848),s=t(8453);const o={},r="Webhooks Service",l={id:"developer/webhooks",title:"Webhooks Service",description:"This is a Flask web application responsible for handling webhook calls from",source:"@site/docs/developer/webhooks.md",sourceDirName:"developer",slug:"/developer/webhooks",permalink:"/baked-docs/docs/developer/webhooks",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Meta",permalink:"/baked-docs/docs/developer/meta"},next:{title:"Roadmap",permalink:"/baked-docs/docs/roadmap/"}},c={},d=[{value:"Running the Application Locally",id:"running-the-application-locally",level:2},{value:"Python Dependencies",id:"python-dependencies",level:2},{value:"Running",id:"running",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Development",id:"development",level:2},{value:"Deployment",id:"deployment",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"webhooks-service",children:"Webhooks Service"})}),"\n",(0,i.jsx)(n.p,{children:"This is a Flask web application responsible for handling webhook calls from\nShotgrid."}),"\n",(0,i.jsx)(n.p,{children:"As of this writing, here are the routes/endpoints supported by the application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Endpoint                             Methods  Rule\n-----------------------------------  -------  --------------------------------\nhealth.ping                          GET      /ping\nsheets.trigger_sync                  POST     /webhooks/sheets/sync\nstatic                               GET      /static/<path:filename>\nstatus.handle_shot_status_change     POST     /webhooks/status/shot\nstatus.handle_task_status_change     POST     /webhooks/status/task\nstatus.handle_version_created        POST     /webhooks/status/version-created\nstatus.handle_version_status_change  POST     /webhooks/status/version\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-the-application-locally",children:"Running the Application Locally"}),"\n",(0,i.jsx)(n.p,{children:"You can run the application locally on your own computer. It will listen for\nincoming connections at your local address."}),"\n",(0,i.jsx)(n.p,{children:"In order to run the application, you first have to install the Python\ndependencies."}),"\n",(0,i.jsx)(n.h2,{id:"python-dependencies",children:"Python Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"Create a virtual environment. This will be the environment into which you\ninstall the Python dependencies."}),"\n",(0,i.jsx)(n.p,{children:"You can do this like so:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ python -m venv venv\n"})}),"\n",(0,i.jsx)(n.p,{children:"Enter the virtual environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ source ./venv/bin/activate\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Install ",(0,i.jsx)(n.code,{children:"pip-tools"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ pip install pip-tools\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"pip-tools"})," to sync the dependencies:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ pip-sync requirements.txt dev-requirements.txt\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can exit the virtual environment by running ",(0,i.jsx)(n.code,{children:"deactivate"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"running",children:"Running"}),"\n",(0,i.jsx)(n.p,{children:"Once you've install the necessary dependencies, you can start the server by\nrunning:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ FLASK_APP=service\n$ SHOTGRID_SECRET_TOKEN=foobar\n$ SHOTGRID_API_KEY=foobar flask run\n"})}),"\n",(0,i.jsx)(n.p,{children:"See below for information about environment variables."}),"\n",(0,i.jsxs)(n.p,{children:["By default, the server will start listening for incoming connections on port\n5000. You can test it out by going to the following address in your browser:\n",(0,i.jsx)(n.code,{children:"http://localhost:5000/ping"})]}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"The application cares about the following environment variables:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable Name"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"FLASK_APP"})}),(0,i.jsxs)(n.td,{children:["This should always be set to ",(0,i.jsx)(n.code,{children:"service"}),". It helps Flask find the application to run."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SHOTGRID_API_KEY"})}),(0,i.jsx)(n.td,{children:"This should be set to the API key we use for Shotgrid."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SHOTGRID_SECRET_TOKEN"})}),(0,i.jsx)(n.td,{children:"This is used to check that incoming requests are really from Shotgrid."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SHOTGRID_SECRET_TOKEN"})," is an environment variable that you can set to whatever\nyou want when you're running the server locally. In production, it must be set\nto the actual secret token."]}),"\n",(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsxs)(n.p,{children:["The Flask application is created in\n./service/",(0,i.jsx)(n.strong,{children:"init"}),".py"]}),"\n",(0,i.jsx)(n.p,{children:"The various routes exposed by the web application are defined under\n./service/routes"}),"\n",(0,i.jsxs)(n.p,{children:["The logic for loading the ",(0,i.jsx)(n.code,{children:"status_mapping.yaml"})," file can be found in\n./service/lib/config.py"]}),"\n",(0,i.jsx)(n.p,{children:"The important code for interacting with the Shotgrid API can be found in\n./service/lib/sg.py"}),"\n",(0,i.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Navigate /webhooks-service directory within the Baked tools repo in your terminal"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Pull the latest from master to make sure you have the change you want to deploy"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'Run "git ls-files | xargs zip service.zip". This creates a zip file of everything you need.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Upload to media shuttle."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Login to the proof server. Download the service.zip file from media shuttle to C:\\inetpub\\wwwroot\\webhooks-service. This should replace the service.zip file that's already there."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:['Right click on service.zip and hit "extract all". ',(0,i.jsx)(n.strong,{children:"Make sure to remove the trailing /service from the path before you extract all"}),". You should be extracting the zip file to C:\\inetpub\\wwwroot\\webhooks-service."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'Go to IIS. Make sure default web site is selected. Hit "restart."'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'To test that the deploy didn\'t break the application, you can go to "localhost/ping" and make sure it says PONG.'}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);